name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NODE_OPTIONS: --max-old-space-size=4096

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 7
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ secrets.VERCEL_TOKEN != '' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NODE_OPTIONS: --max-old-space-size=4096
        
    - name: Deploy to Vercel (Production)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Deploy to Vercel (Preview)
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--no-wait'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        github-comment: true
        github-deployment: false
